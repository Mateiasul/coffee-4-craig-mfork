{"version":3,"sources":["webpack:///./src/components/ContactForm.js","webpack:///./src/components/FeatureInverted.js","webpack:///./src/components/FaqCard.js","webpack:///./src/components/Faq.js","webpack:///./src/templates/contact-page.js","webpack:///./src/components/Credits.js"],"names":["encode","data","Object","keys","map","key","encodeURIComponent","join","ContactForm","state","fields","fullName","emailAddress","reason","message","submitted","sending","handleInputChange","e","persist","setState","nativeEvent","target","name","value","checkEmpty","values","filter","field","length","handleFormSubmit","preventDefault","fetch","method","headers","body","then","catch","error","alert","render","this","className","data-netlify","data-netlify-honeypot","onSubmit","type","onChange","id","disabled","selected","rows","style","textAlign","React","Component","FeatureInverted","title","text","primaryButtonText","backgroundImage","PreviewCompatibleImage","cName","imageInfo","href","FaqCard","description","useState","clicked","setClicked","closingTransition","setClosingTransition","backgroundColor","onClick","setTimeout","color","animation","Faq","faqTitle","faqList","item","ContactPageTemplate","hero","featureInverted","credits","faq","Hero","Credits","ContactPage","frontmatter","markdownRemark","Layout","creditList","credit","i","link","url","isContained","logo"],"mappings":"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","file":"component---src-templates-contact-page-js-21521414e01842c99ffe.js","sourcesContent":["import React, { Fragment } from \"react\";\r\n\r\nconst encode = data => {\r\n  return Object.keys(data)\r\n    .map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\r\n    .join(\"&\");\r\n};\r\n\r\nclass ContactForm extends React.Component {\r\n  state = {\r\n    fields: {\r\n      fullName: \"\",\r\n      emailAddress: \"\",\r\n      reason: \"\",\r\n      message: \"\"\r\n    },\r\n    submitted: false,\r\n    sending: false\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    e.persist();\r\n   \r\n    this.setState(state => ({\r\n      fields: {\r\n        ...state.fields,\r\n        [e.nativeEvent.target.name]: e.nativeEvent.target.value\r\n      }\r\n    }));\r\n  };\r\n\r\n  checkEmpty = () => {\r\n    const notEmpty = Object.values(this.state.fields).filter(\r\n      field => field !== \"\"\r\n    );\r\n\r\n    if (notEmpty.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  handleFormSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (this.checkEmpty()) {\r\n      this.setState({ sending: true });\r\n      fetch(\"/\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n        body: encode({ \"form-name\": \"contact\", ...this.state.fields })\r\n      })\r\n        .then(() => this.setState({ submitted: true, sending: false }))\r\n        .catch(error => alert(error));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { sending, submitted } = this.state;\r\n\r\n    return (\r\n      <div className=\"contact-form\">\r\n        <div className=\"contact-form__wrapper\">\r\n          {submitted ? (\r\n            <Fragment>\r\n              <h2 className=\"contact-form__title\">Thank you</h2>\r\n              <p>\r\n                Your message has been sent. We'll aim to get back to you within\r\n                48 hours.\r\n              </p>\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              <h2 className=\"contact-form__title\">\r\n                Speak with our support team\r\n              </h2>\r\n              <form\r\n                className=\"contact-form__form\"\r\n                name=\"contact\"\r\n                method=\"POST\"\r\n                data-netlify=\"true\"\r\n                data-netlify-honeypot=\"bot-field\"\r\n                onSubmit={this.handleFormSubmit}\r\n              >\r\n            \r\n\r\n                <input type=\"hidden\" name=\"form-name\" value=\"contact\" />\r\n                <div className=\"contact-form__form-group\">\r\n                  <label>\r\n                    Full name\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"fullName\"\r\n                      onChange={this.handleInputChange}\r\n                      value={this.state.fields.fullName}\r\n                    />\r\n                  </label>\r\n                  <label>\r\n                    Email Address\r\n                    <input\r\n                      type=\"email\"\r\n                      name=\"emailAddress\"\r\n                      onChange={this.handleInputChange}\r\n                      value={this.state.fields.emailAddress}\r\n                    />\r\n                  </label>\r\n                </div>\r\n                <div className=\"contact-form__form-group\">\r\n                  <label>I am contacting you...\r\n                    <div className=\"contact-form__select-arrow\"></div>\r\n                    <select id=\"reason-select\" name=\"reason\" onChange={this.handleInputChange}>\r\n                      <option disabled selected>Please select an option</option>\r\n                      <option>About a guest that uses your service</option>\r\n                      <option>Interested in become a volunteer</option>\r\n                      <option>I'd like to make a donation</option>\r\n                      <option>Media enquiry</option>\r\n                      <option>I need advice</option>\r\n                      <option>Something else</option>\r\n                    </select>\r\n                  </label>\r\n                </div>\r\n                <div className=\"contact-form__form-group\">\r\n                  <label>\r\n                    Message\r\n                    <textarea\r\n                      rows=\"5\"\r\n                      name=\"message\"\r\n                      onChange={this.handleInputChange}\r\n                      value={this.state.fields.message}\r\n                    />\r\n                  </label>\r\n                </div>\r\n                <div className=\"contact-form__form-group\">\r\n                  <button\r\n                    className=\"btn btn--style-b\"\r\n                    type=\"submit\"\r\n                    disabled={sending}\r\n                  >\r\n                    {sending ? \"Sending...\" : \"Submit Message\"}\r\n                  </button>\r\n                </div>\r\n                <div className=\"contact-form__form-group\">\r\n                  <p\r\n                    style={{ textAlign: \"center\" }}\r\n                    className=\"contact-form__form-group__submition-text\"\r\n                  >\r\n                    We’ll aim to get back to you within 48 hrs\r\n                  </p>\r\n                </div>\r\n              </form>\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\n\r\nimport PreviewCompatibleImage from './PreviewCompatibleImage';\r\n\r\nconst FeatureInverted = ({ title, text, primaryButtonText, backgroundImage }) => {\r\n  return (\r\n    <div className=\"feature-inverted\">\r\n      <PreviewCompatibleImage cName=\"feature-inverted__image\" imageInfo={backgroundImage}></PreviewCompatibleImage>\r\n      <div className=\"feature-inverted__overlay\">\r\n        <div className=\"feature-inverted__wrapper\">\r\n          <div className=\"feature-inverted__col\">\r\n            <h2 className=\"feature-inverted__title\">{title}</h2>\r\n            <p className=\"feature-inverted__text\">{text}</p>\r\n            <div className=\"donate__cta\">\r\n              <a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=VBW25QGTWEMYC&source=url\" \r\n              className=\"btn btn--style-g donate__btn\">{primaryButtonText}</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>    \r\n    </div>\r\n    );\r\n  }\r\n\r\n\r\nexport default FeatureInverted;","import React, { useState } from \"react\";\r\n\r\nconst FaqCard = ({title, description}) => {\r\n  const [clicked, setClicked] = useState(false);\r\n  const [closingTransition, setClosingTransition] = useState(false);\r\n  const backgroundChange = {\r\n    backgroundColor: \"#2db88e\"\r\n  };\r\n  const colorChange = {\r\n    color: \"#2db88e\"\r\n  };\r\n\r\n  const closingTrans = {\r\n    animation: \"0.4s linear shrink\"\r\n  };\r\n  const handleClosingTransition = () => {\r\n    setClosingTransition(true);\r\n    setTimeout(() => {\r\n      setClicked(false);\r\n      setClosingTransition(false);\r\n    }, 400);\r\n  };\r\n  return (\r\n    <div className=\"faq-card\">\r\n      <div className=\"faq-rail\" style={clicked ? backgroundChange : null} onClick={() => {clicked == false ? setClicked(true) : handleClosingTransition()}}>\r\n        <p className=\"faq-card-title\">{title}</p>\r\n        {!clicked ? (\r\n          <div className=\"faq__icon__container\">\r\n            <div className=\"faq-icon\" >\r\n              +\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"faq__icon__container\">\r\n            <div\r\n              className=\"faq-icon faq-icon--minus\"\r\n              style={clicked ? colorChange : null}\r\n            >\r\n              -\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {clicked ? (\r\n        <div\r\n          style={closingTransition ? closingTrans : null}\r\n          className=\"faq-content\"\r\n        >\r\n          {description}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FaqCard;\r\n","import React from 'react';\r\nimport FaqCard from './FaqCard';\r\n\r\nconst Faq = ({faqTitle, faqList}) => {\r\n\treturn (\r\n\t\t<div className=\"faq-container\">\r\n\t\t\t<h2 className=\"faq-title\">{faqTitle}</h2>\r\n\t\t\t{\r\n        faqList && faqList.length > 0 && faqList.map(item => {\r\n\t\t\t\treturn <FaqCard {...item} />;\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Faq;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { graphql } from \"gatsby\";\r\n\r\nimport Layout from \"../components/Layout\";\r\nimport Hero from \"../components/Hero\";\r\nimport LeadText from \"../components/LeadText\";\r\nimport ContactForm from \"../components/ContactForm\";\r\nimport Credits from \"../components/Credits\";\r\nimport Emergency from \"../components/Emergency\";\r\nimport FeatureInverted from \"../components/FeatureInverted\";\r\nimport Faq from \"../components/Faq\";\r\n\r\nexport const ContactPageTemplate = ({ hero, featureInverted, credits, faq }) => (\r\n  <div>\r\n    <Hero {...hero} />\r\n    <ContactForm />\r\n    <Credits {...credits} />\r\n    <FeatureInverted {...featureInverted} />\r\n    <Faq {...faq}/>\r\n  </div>\r\n);\r\n\r\nconst ContactPage = ({ data }) => {\r\n  const { frontmatter } = data.markdownRemark;\r\n\r\n  return (\r\n    <Layout>\r\n      <ContactPageTemplate\r\n        hero={frontmatter.hero}\r\n        featureInverted={frontmatter.featureInverted}\r\n        credits={frontmatter.credits}\r\n        faq={frontmatter.faq}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nContactPage.propTypes = {\r\n  data: PropTypes.shape({\r\n    markdownRemark: PropTypes.shape({\r\n      frontmatter: PropTypes.object\r\n    })\r\n  })\r\n};\r\n\r\nexport default ContactPage;\r\n\r\nexport const pageQuery = graphql`\r\n  query ContactPageTemplate {\r\n    markdownRemark(frontmatter: { templateKey: { eq: \"contact-page\" } }) {\r\n      frontmatter {\r\n        hero {\r\n          backgroundImage {\r\n            image {\r\n              childImageSharp {\r\n                fluid(maxWidth: 1200, quality: 64) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n            alt\r\n          }\r\n          title\r\n        }\r\n        featureInverted {\r\n          title\r\n          text\r\n          primaryButtonText\r\n          backgroundImage {\r\n            image {\r\n              childImageSharp {\r\n                fluid(maxWidth: 1200, quality: 64) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n            alt\r\n          }\r\n        }\r\n        credits {\r\n          title\r\n          creditList {\r\n            logo {\r\n              image {\r\n                childImageSharp {\r\n                  fluid(maxWidth: 200, fit: CONTAIN, quality: 64) {\r\n                    ...GatsbyImageSharpFluid\r\n                  }\r\n                }\r\n              }\r\n              alt\r\n            }\r\n            link {\r\n              url\r\n              target\r\n            }\r\n          }\r\n        }\r\n        faq {\r\n          faqList {\r\n              title,\r\n              description\r\n          }\r\n          faqTitle\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react'\r\n\r\nimport PreviewCompatibleImage from './PreviewCompatibleImage';\r\n\r\nconst Credits = ({ title, creditList }) => {\r\n    return (\r\n        <div className=\"featured\">\r\n            <div className=\"featured__wrapper\">\r\n                <div className=\"featured__row_1\">\r\n                    <p className=\"featured__row_1_text\">{title}</p>\r\n                </div>\r\n                <div className=\"featured__row_2\">\r\n                    {\r\n                        creditList && creditList.length > 0 && creditList.map((credit, i) => (\r\n                            <div key={i} className=\"featured___column\">\r\n                                {\r\n                                    credit.link.url !== '#' ? (\r\n                                        <a href={credit.link.url} target={credit.link.target}>\r\n                                            <PreviewCompatibleImage cName=\"featured__logo\" isContained imageInfo={credit.logo} />\r\n                                        </a>\r\n                                    ) : (\r\n                                            <PreviewCompatibleImage cName=\"featured__logo\" isContained imageInfo={credit.logo} />\r\n                                        )\r\n                                }\r\n                                {\r\n                                    credit.description && credit.description.length > 0 &&\r\n                                    <p className=\"featured__description\">\r\n                                        {credit.description}\r\n                                    </p>\r\n                                }\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Credits;\r\n"],"sourceRoot":""}